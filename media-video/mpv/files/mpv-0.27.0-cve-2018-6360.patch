From 899ce946930e695af757b13d5374f005087285e4 Mon Sep 17 00:00:00 2001
From: Ricardo Constantino <wiiaboo@gmail.com>
Date: Fri, 26 Jan 2018 01:19:04 +0000
Subject: [PATCH 1/6] ytdl_hook: whitelist protocols from urls retrieved from
 youtube-dl

Not very clean since there's a lot of potential unsafe urls that youtube-dl
can give us, depending on whether it's a single url, split tracks,
playlists, segmented dash, etc.
---
 player/lua/ytdl_hook.lua | 55 ++++++++++++++++++++++++++++++++++++++++++------
 1 file changed, 48 insertions(+), 7 deletions(-)

diff --git a/player/lua/ytdl_hook.lua b/player/lua/ytdl_hook.lua
index 82679a2aa8..601c2ad066 100644
--- a/player/lua/ytdl_hook.lua
+++ b/player/lua/ytdl_hook.lua
@@ -15,6 +15,18 @@ local ytdl = {

 local chapter_list = {}

+function Set (t)
+    local set = {}
+    for _, v in pairs(t) do set[v] = true end
+    return set
+end
+
+local safe_protos = Set {
+    "http", "https", "ftp", "ftps",
+    "rtmp", "rtmps", "rtmpe", "rtmpt", "rtmpts", "rtmpte",
+    "data"
+}
+
 local function exec(args)
     local ret = utils.subprocess({args = args})
     return ret.status, ret.stdout, ret
@@ -182,6 +194,9 @@ local function edl_track_joined(fragments, protocol, is_live, base)

     for i = offset, #fragments do
         local fragment = fragments[i]
+        if not url_is_safe(join_url(base, fragment)) then
+            return nil
+        end
         table.insert(parts, edl_escape(join_url(base, fragment)))
         if fragment.duration then
             parts[#parts] =
@@ -191,6 +206,15 @@ local function edl_track_joined(fragments, protocol, is_live, base)
     return edl .. table.concat(parts, ";") .. ";"
 end

+local function url_is_safe(url)
+    local proto = type(url) == "string" and url:match("^(.+)://") or nil
+    local safe = proto and safe_protos[proto]
+    if not safe then
+        msg.error(("Ignoring potentially unsafe url: '%s'"):format(url))
+    end
+    return safe
+end
+
 local function add_single_video(json)
     local streamurl = ""

@@ -201,14 +225,18 @@ local function add_single_video(json)
             edl_track = edl_track_joined(track.fragments,
                 track.protocol, json.is_live,
                 track.fragment_base_url)
+            local url = edl_track or track.url
+            if not url_is_safe(url) then
+                return
+            end
             if track.acodec and track.acodec ~= "none" then
                 -- audio track
                 mp.commandv("audio-add",
-                    edl_track or track.url, "auto",
+                    url, "auto",
                     track.format_note or "")
             elseif track.vcodec and track.vcodec ~= "none" then
                 -- video track
-                streamurl = edl_track or track.url
+                streamurl = url
             end
         end

@@ -227,7 +255,13 @@ local function add_single_video(json)

     msg.debug("streamurl: " .. streamurl)

-    mp.set_property("stream-open-filename", streamurl:gsub("^data:", "data://", 1))
+    streamurl = streamurl:gsub("^data:", "data://", 1)
+
+    if not url_is_safe(streamurl) then
+        return
+    end
+
+    mp.set_property("stream-open-filename", streamurl)

     mp.set_property("file-local-options/force-media-title", json.title)

@@ -455,14 +489,14 @@ mp.add_hook("on_load", 10, function ()
                 add_single_video(json.entries[1])
             else

-                local playlist = "#EXTM3U\n"
+                local playlist = {"#EXTM3U"}
                 for i, entry in pairs(json.entries) do
                     local site = entry.url
                     local title = entry.title

                     if not (title == nil) then
                         title = string.gsub(title, '%s+', ' ')
-                        playlist = playlist .. "#EXTINF:0," .. title .. "\n"
+                        table.insert(playlist, "#EXTINF:0," .. title)
                     end

                     -- some extractors will still return the full info for
@@ -475,10 +509,17 @@ mp.add_hook("on_load", 10, function ()
                         site = entry["webpage_url"]
                     end

-                    playlist = playlist .. "ytdl://" .. site .. "\n"
+                    -- links with only youtube id as returned by --flat-playlist
+                    if not site:find("://") then
+                        table.insert(playlist, "ytdl://" .. site)
+                    elseif url_is_safe(site) then
+                        table.insert(playlist, site)
+                    end
                 end

-                mp.set_property("stream-open-filename", "memory://" .. playlist)
+                if #playlist > 0 then
+                    mp.set_property("stream-open-filename", "memory://" .. table.concat(playlist, "\n"))
+                end
             end

         else -- probably a video

From 83299b838291d119fc258e8e8c794f219cb56140 Mon Sep 17 00:00:00 2001
From: Ricardo Constantino <wiiaboo@gmail.com>
Date: Fri, 26 Jan 2018 11:26:27 +0000
Subject: [PATCH 2/6] ytdl_hook: move url_is_safe earlier in code

lua isn't javascript.
---
 player/lua/ytdl_hook.lua | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/player/lua/ytdl_hook.lua b/player/lua/ytdl_hook.lua
index 601c2ad066..7da39d3553 100644
--- a/player/lua/ytdl_hook.lua
+++ b/player/lua/ytdl_hook.lua
@@ -83,6 +83,15 @@ local function edl_escape(url)
     return "%" .. string.len(url) .. "%" .. url
 end

+local function url_is_safe(url)
+    local proto = type(url) == "string" and url:match("^(.+)://") or nil
+    local safe = proto and safe_protos[proto]
+    if not safe then
+        msg.error(("Ignoring potentially unsafe url: '%s'"):format(url))
+    end
+    return safe
+end
+
 local function time_to_secs(time_string)
     local ret

@@ -206,15 +215,6 @@ local function edl_track_joined(fragments, protocol, is_live, base)
     return edl .. table.concat(parts, ";") .. ";"
 end

-local function url_is_safe(url)
-    local proto = type(url) == "string" and url:match("^(.+)://") or nil
-    local safe = proto and safe_protos[proto]
-    if not safe then
-        msg.error(("Ignoring potentially unsafe url: '%s'"):format(url))
-    end
-    return safe
-end
-
 local function add_single_video(json)
     local streamurl = ""


From 011b9dc46a62fb7dfceae1695aecfdf01f9973fd Mon Sep 17 00:00:00 2001
From: Ricardo Constantino <wiiaboo@gmail.com>
Date: Fri, 26 Jan 2018 18:54:17 +0000
Subject: [PATCH 3/6] ytdl_hook: fix safe url checking with EDL urls

---
 player/lua/ytdl_hook.lua | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/player/lua/ytdl_hook.lua b/player/lua/ytdl_hook.lua
index 7da39d3553..9e94b82cd6 100644
--- a/player/lua/ytdl_hook.lua
+++ b/player/lua/ytdl_hook.lua
@@ -225,18 +225,17 @@ local function add_single_video(json)
             edl_track = edl_track_joined(track.fragments,
                 track.protocol, json.is_live,
                 track.fragment_base_url)
-            local url = edl_track or track.url
-            if not url_is_safe(url) then
+            if not edl_track and not url_is_safe(track.url) then
                 return
             end
             if track.acodec and track.acodec ~= "none" then
                 -- audio track
                 mp.commandv("audio-add",
-                    url, "auto",
+                    edl_track or track.url, "auto",
                     track.format_note or "")
             elseif track.vcodec and track.vcodec ~= "none" then
                 -- video track
-                streamurl = url
+                streamurl = edl_track or track.url
             end
         end

@@ -245,6 +244,9 @@ local function add_single_video(json)
         edl_track = edl_track_joined(json.fragments, json.protocol,
             json.is_live, json.fragment_base_url)

+        if not edl_track and not url_is_safe(json.url) then
+            return
+        end
         -- normal video or single track
         streamurl = edl_track or json.url
         set_http_headers(json.http_headers)
@@ -255,13 +257,7 @@ local function add_single_video(json)

     msg.debug("streamurl: " .. streamurl)

-    streamurl = streamurl:gsub("^data:", "data://", 1)
-
-    if not url_is_safe(streamurl) then
-        return
-    end
-
-    mp.set_property("stream-open-filename", streamurl)
+    mp.set_property("stream-open-filename", streamurl:gsub("^data:", "data://", 1))

     mp.set_property("file-local-options/force-media-title", json.title)

@@ -442,6 +438,10 @@ mp.add_hook("on_load", 10, function ()

                 msg.debug("EDL: " .. playlist)

+                if not playlist then
+                    return
+                end
+
                 -- can't change the http headers for each entry, so use the 1st
                 if json.entries[1] then
                     set_http_headers(json.entries[1].http_headers)

From 408a65cf481544201ade88471876271721c0db47 Mon Sep 17 00:00:00 2001
From: Ricardo Constantino <wiiaboo@gmail.com>
Date: Sun, 11 Feb 2018 13:18:10 +0000
Subject: [PATCH 5/6] ytdl_hook: whitelist subtitle URLs as well

This was overlooked when doing the whitelisting for video and audio to
fix #5456.
---
 player/lua/ytdl_hook.lua | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/player/lua/ytdl_hook.lua b/player/lua/ytdl_hook.lua
index 9e94b82cd6..aa628fb2ee 100644
--- a/player/lua/ytdl_hook.lua
+++ b/player/lua/ytdl_hook.lua
@@ -270,7 +270,8 @@ local function add_single_video(json)

             if not (sub_info.data == nil) then
                 sub = "memory://"..sub_info.data
-            elseif not (sub_info.url == nil) then
+            elseif not (sub_info.url == nil) and
+                url_is_safe(sub_info.url) then
                 sub = sub_info.url
             end

@@ -468,7 +469,8 @@ mp.add_hook("on_load", 10, function ()
                         local subfile = "edl://"
                         for i, entry in pairs(json.entries) do
                             if not (entry.requested_subtitles == nil) and
-                                not (entry.requested_subtitles[j] == nil) then
+                                not (entry.requested_subtitles[j] == nil) and
+                                url_is_safe(entry.requested_subtitles[j].url) then
                                 subfile = subfile..edl_escape(entry.requested_subtitles[j].url)
                             else
                                 subfile = subfile..edl_escape("memory://WEBVTT")
