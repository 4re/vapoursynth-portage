diff --git a/KNLMeansCL/KNLMeansCL.cpp b/KNLMeansCL/KNLMeansCL.cpp
index ac84d88..b1fcfa3 100644
--- a/KNLMeansCL/KNLMeansCL.cpp
+++ b/KNLMeansCL/KNLMeansCL.cpp
@@ -1093,7 +1093,7 @@ static void VS_CC VapourSynthPluginCreate(const VSMap *in, VSMap *out,
     d.ocl_device = vsapi->propGetData(in, "device_type", 0, &err);
     if (err) d.ocl_device = DFT_ocl_device;
     d.ocl_id = vsapi->propGetInt(in, "device_id", 0, &err);
-    if (err) d.d = DFT_ocl_id;
+    if (err) d.ocl_id = DFT_ocl_id;
     d.info = vsapi->propGetInt(in, "info", 0, &err);
     if (err) d.info = DFT_info;

@@ -1244,10 +1244,10 @@ static void VS_CC VapourSynthPluginCreate(const VSMap *in, VSMap *out,
     d.mem_in[0] = clCreateImage2D(d.context, CL_MEM_READ_ONLY, &image_format,
         d.idmn[0], d.idmn[1], 0, NULL, &ret);
     if (ret == CL_IMAGE_FORMAT_NOT_SUPPORTED) {
-     vsapi->setError(out, "knlm.KNLMeansCL: this image format is not supported by your device!");
-     vsapi->freeNode(d.node);
-     vsapi->freeNode(d.knot);
-     return;
+        vsapi->setError(out, "knlm.KNLMeansCL: this image format is not supported by your device!");
+        vsapi->freeNode(d.node);
+        vsapi->freeNode(d.knot);
+        return;
     }
     d.mem_in[2] = clCreateImage2D(d.context, CL_MEM_READ_ONLY, &image_format,
         d.idmn[0], d.idmn[1], 0, NULL, NULL);
@@ -1266,7 +1266,7 @@ static void VS_CC VapourSynthPluginCreate(const VSMap *in, VSMap *out,

     // Host buffer.
     if (d.color == YUV || d.color == RGB) {
-       d.hostBuffer = malloc(d.idmn[0] * d.idmn[1] * 4 * d.vi->format->bytesPerSample);
+        d.hostBuffer = malloc(d.idmn[0] * d.idmn[1] * 4 * d.vi->format->bytesPerSample);
     } else {
         d.hostBuffer = nullptr;
     }
diff --git a/KNLMeansCL/KNLMeansCL.h b/KNLMeansCL/KNLMeansCL.h
index 50d7527..ddc750a 100644
--- a/KNLMeansCL/KNLMeansCL.h
+++ b/KNLMeansCL/KNLMeansCL.h
@@ -16,7 +16,7 @@
 *	along with KNLMeansCL. If not, see <http://www.gnu.org/licenses/>.
 */

-#define VERSION "0.6.3"
+#define VERSION "0.6.3-1"

 #ifdef _MSC_VER
     #pragma warning (disable : 4514 4710 4820)
